#+TITLE:       Tensor Flow - Simple graph
#+AUTHOR:      Arturo Vivas
#+EMAIL:       arturo.vivas@gmail.com
#+DATE:        2016-11-27 So
#+URI:         /blog/%y/%m/%d/Tensor-flow-001
#+KEYWORDS:    tensor flow, linear algebra
#+TAGS:        tensor flow
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Introduction to Tensor Flow

The first very very very small program using TensorFlow. In the following lines we are going to perform a sum of two scalars. This may sound trivial, yet the important concept in the following code is the "graph" behind it.

#+NAME: tensorflow
#+BEGIN_SRC ipython :session mysession :exports both
import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

session = tf.Session()

a = tf.constant(10, name="input_a")
b = tf.constant(20, name="input_b")
c = tf.add(a, b, name="add_c")

result = session.run(c)
(result)
#+END_SRC

#+RESULTS: tensorflow
: 30


Here comes the interessting part, also pass auf! The small calculation Tensorflow  just did is the result of the computation of the *computational graph* defined in the code. The graphical visualization of the code would be the following:


#+BEGIN_SRC dot :export none  :file ./img/simple_graph.png :cmdline -Kdot -Tpng  :results output silent
digraph G {

          rankdir=LR
	  splines=line
          nodesep=.05;
          x2 [label="10"];
          x1 [label="20"];
          a12 [label="10+20"];

          subgraph cluster_0 {
		  color=white;
                  node [style=solid,color=blue4, shape=circle];
		  x1 x2 ;
		  label = "layer 1 = Inputs";
	  }

	  subgraph cluster_1 {
		  color=white;
		  node [style=solid,color=red2, shape=circle];
		  a12 ;
		  label = "layer 2 = Output";
	  }

        x1 -> a12;
        x2 -> a12;

}
#+END_SRC


#+CAPTION: Our Program's graph
[[file:./img/simple_graph.png]]

This was a very simple example yet it shows TensorFlow's main functionality. *Tensors which flow along the computational Graph*. Let's see another example, this time with a more complex graph.

#+BEGIN_SRC dot :export none  :file ./img/simple_graph_02.png :cmdline -Kdot -Tpng  :results output silent
digraph G {

            rankdir=LR
	    splines=line
            nodesep=.05;
            x1 [label="x1"];
            x2 [label="x2"];
            x3 [label="x3"];
            x4 [label="x4"];
            x5 [label="x5"];

            a12 [label="h1"];
            a22 [label="h2"];
            a32 [label="h3"];
            a42 [label="h4"];
            a52 [label="h5"];

            a13 [label="o1"];
            a23 [label="o2"];
            a33 [label="o3"];
            a43 [label="o4"];
            a53 [label="o5"];

            subgraph cluster_0 {
		    color=white;
                    node [style=solid,color=blue4, shape=circle];
		    x1 x2 x3 x4 x5;
		    label = "layer 1 = Inputs";
	    }

	    subgraph cluster_1 {
		    color=white;
		    node [style=solid,color=red2, shape=circle];
		    a12 a22 a32 a42 a52;
		    label = "layer 2 = Hidden Layer";
	    }

            subgraph cluster_3 {
		    color=white;
		    node [style=solid,color=red2, shape=circle];
		    a13 a23 a33 a43 a53;
		    label = "layer 3 = Output Layer";
	    }

          x1 -> a12;
          x1 -> a22;
          x1 -> a32;
          x1 -> a42;
          x1 -> a52;

          x2 -> a12;
          x2 -> a22;
          x2 -> a32;
          x2 -> a42;
          x2 -> a52;
 
          x3 -> a12;
          x3 -> a22;
          x3 -> a32;
          x3 -> a42;
          x3 -> a52;

          x4 -> a12;
          x4 -> a22;
          x4 -> a32;
          x4 -> a42;
          x4 -> a52;
          
          x5 -> a12;
          x5 -> a22;
          x5 -> a32;
          x5 -> a42;
          x5 -> a52;

          a12 -> a13;
          a12 -> a23;
          a12 -> a33;
          a12 -> a43;
          a12 -> a53;
          
          a22 -> a13;
          a22 -> a23;
          a22 -> a33;
          a22 -> a43;
          a22 -> a53;

          a32 -> a13;
          a32 -> a23;
          a32 -> a33;
          a32 -> a43;
          a32 -> a53;

          a42 -> a13;
          a42 -> a23;
          a42 -> a33;
          a42 -> a43;
          a42 -> a53;

          a52 -> a13;
          a52 -> a23;
          a52 -> a33;
          a52 -> a43;
          a52 -> a53;

  }

#+END_SRC

#+CAPTION: A graph with three layers and 50 connections
file:[[./img/simple_graph_02.png]]
